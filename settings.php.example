<?php

declare(strict_types=1);

use League\Period\Duration;
use Lits\Config\BookConfig;
use Lits\Config\FrameworkConfig;
use Lits\Config\LibCalConfig;
use Lits\Config\MetaConfig;
use Lits\Config\QuestionConfig;
use Lits\Config\SessionConfig;
use Lits\Config\TemplateConfig;
use Lits\Framework;

return function (Framework $framework): void {
    $settings = $framework->settings();

    assert($settings['framework'] instanceof FrameworkConfig);

    // Whether to enable debug information.
    // $settings['framework']->debug = false;

    // Path to log file to be generated by the application.
    // $settings['framework']->log = '';

    assert($settings['session'] instanceof SessionConfig);

    // Base64 encoded key with at least 32-bits of entropy. Required.
    // $settings['session']->key = '';

    // Seconds before a session will expire.
    // $settings['session']->expires = 3600;

    assert($settings['template'] instanceof TemplateConfig);

    // Path to cache directory, which must be writable.
    $settings['template']->cache = __DIR__ . DIRECTORY_SEPARATOR . 'cache';

    // Paths to search for template files.
    // $settings['template']->paths[] = '';

    // Name of the site.
    $settings['template']->site = 'Bookable Resources';

    // HTML contact information for the site.
    // $settings['template']->contact = '';

    // Menu for the site.
    // $settings['template']->menu = [];

    assert($settings['libcal'] instanceof LibCalConfig);

    // Hostname of LibCal instance.
    $settings['libcal']->host = 'example.libcal.com';

    // Client ID from the API Authentication admin of LibCal.
    $settings['libcal']->clientId = '0';

    // Client Secret from the API Authentication admin of LibCal.
    $settings['libcal']->clientSecret = '1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d';

    // Path to cache directory, which must be writable.
    if (is_string($settings['template']->cache)) {
        $settings['libcal']->cache = $settings['template']->cache;
    }

    assert($settings['book'] instanceof BookConfig);

    // Create a configuration for a given ID number (ex. 0).
    // $meta = new MetaConfig(0);

    // Set the required email domain(s), similar to LibCal configuration.
    // $meta->emailDomain = '@example.edu';

    // Set the default length of a booking as a duration.
    // $meta->lengthDefault = Duration::create('2 hours');

    // Set the minimum length of a booking as a duration.
    // $meta->lengthMinimum = Duration::create('1 hour');

    // Set the maximum length of a booking as a duration.
    // $meta->lengthMaximum = Duration::create('3 hours');

    // Add the configuration to a location.
    // $settings['book']->locations[] = $meta;

    // Add the configuration to a category.
    // $settings['book']->categories[] = $meta;

    // Add the configuration to an item.
    // $settings['book']->items[] = $meta;

    // Specify the type of a question ID, primarily to support textarea.
    // $settings['book']->questions[] = new QuestionConfig('q0', 'textarea');
};
